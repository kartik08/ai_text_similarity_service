name: CI - Test and Docker Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"

      - name: Run tests (unit + integration)
        env:
          PYTHONPATH: .
        run: |
          source venv/bin/activate
          mkdir -p test-results
          python -m unittest discover -s tests -v | tee test-results/test_output.log

      - name: Upload test log artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: test-results/test_output.log

  docker:
    name: Docker Build & Verify
    runs-on: ubuntu-latest
    needs: test  # only run this after tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t ai-text-similarity .

      - name: Run Docker container & test endpoint
        run: |
          docker run -d -p 5000:5000 --name ai-app ai-text-similarity
          sleep 5
          curl --fail -X POST http://localhost:5000/analyze \
            -H "Content-Type: application/json" \
            -d '{"prompt1": "Hello", "prompt2": "Hi", "method": "cosine"}'